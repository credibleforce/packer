---
  # update the list of known_hosts so ssh will not fail to connect
  - hosts: all
    gather_facts: False
    vars:
      ansible_connection: local
      ansible_python_interpreter: "{{ ansible_playbook_python }}"
    pre_tasks:
      - name: Lab variables
        include_vars: ../vars/lab.yml
    tasks:
      - name: Run whoami without become.
        delegate_to: localhost
        command: whoami
        changed_when: false
        become: false
        register: whoami
      
      # migrate to prod user so we can clean up build account
      - name: "Switch from build user to prod Admin"
        set_fact:
          ansible_ssh_user: "{{ lab.settings.windows.win_admin_user }}"
          ansible_ssh_pass: "{{ lab.settings.windows.win_admin_password  }}"
          ansible_winrm_transport: ntlm
        no_log: true
        when: ansible_system == 'Win32NT'

      # at build as dns is unavailable we need to ensure we use prod_ip
      - name: Remove any existing host keys by name and assigned ip
        delegate_to: localhost
        shell: |
          ssh-keygen -f "~/.ssh/known_hosts" -R "{{inventory_hostname}}"
          ssh-keygen -f "~/.ssh/known_hosts" -R "{{ansible_host}}"
          ssh-keygen -f "~/.ssh/known_hosts" -R "{{hostvars[inventory_hostname].prod_ip}}"
        ignore_errors: yes
        when: 
          - hostvars[inventory_hostname].ansible_connection is not defined or (hostvars[inventory_hostname].ansible_connection is defined and hostvars[inventory_hostname].ansible_connection=='ssh')
      
      - name: get port, default 22
        delegate_to: localhost
        set_fact:
          ansible_ssh_port: "{{ hostvars[inventory_hostname]['ansible_ssh_port'] | default('22') }}"
        when: 
          - hostvars[inventory_hostname].ansible_connection is not defined or (hostvars[inventory_hostname].ansible_connection is defined and hostvars[inventory_hostname].ansible_connection=='ssh')
      
      # at build as dns is unavailable we need to ensure we use prod_ip
      - name: Ensure ssh host key by ansible_host
        delegate_to: localhost
        lineinfile:
          dest: ~/.ssh/known_hosts
          create: yes
          state: present
          line: "{{ lookup('pipe', 'ssh-keyscan -trsa -p' + ansible_ssh_port + ' ' + hostvars[inventory_hostname].prod_ip, errors='warn') }}"
        when: 
          - hostvars[inventory_hostname].ansible_connection is not defined or (hostvars[inventory_hostname].ansible_connection is defined and hostvars[inventory_hostname].ansible_connection=='ssh')