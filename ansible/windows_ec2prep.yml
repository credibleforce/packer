---
  - hosts: all
    gather_facts: True
    pre_tasks:
      - name: Windows Variable
        include_vars: vars/windows.yml
        when: ansible_system == 'Win32NT'
    tasks:
      - name: Install EC2Launch
        win_shell: |
          $EC2LaunchZip = 'https://s3.amazonaws.com/ec2-downloads-windows/EC2Launch/latest/EC2-Windows-Launch.zip'
          $OutPath = "C:\ProgramData\Amazon\EC2-Windows\EC2-Windows-Launch.zip"
          $EC2LaunchInstall = 'https://s3.amazonaws.com/ec2-downloads-windows/EC2Launch/latest/install.ps1'
          $OutInstallPath = "C:\ProgramData\Amazon\EC2-Windows\install.ps1"

          $LPath = 'C:\ProgramData\Amazon\EC2-Windows\Launch'
          if(!(Test-Path $LPath)){
              New-Item -ItemType Directory -Force -Path $LPath
          }

          Invoke-WebRequest -Uri $EC2LaunchZip -OutFile $OutPath
          Invoke-WebRequest -Uri $EC2LaunchInstall -OutFile $OutInstallPath
          & $OutInstallPath

          # Expand-Archive -Path $OutPath -DestinationPath $LPath
          Remove-Item $OutPath

          # Prepare the custom unattend if it exists
          if(Test-Path "A:\AWS_Unattend.xml"){
              Remove-Item -Path $("{0}\Sysprep\Unattend.xml" -f $LPath)
              Copy-Item -Path "A:\AWS_Unattend.xml" $("{0}\Sysprep\Unattend.xml" -f $LPath)
          }

        register: script_result

      - name: Script result
        debug: var=script_result

      - name: Update EC2Launch Configuration
        win_template:
          src: "templates/LaunchConfig.json.j2"
          dest: 'C:\ProgramData\Amazon\EC2-Windows\Launch\config\LaunchConfig.json'
        when: ansible_system == 'Win32NT'

      - name: Run EC2Launch Setup
        win_shell: |
          & C:\ProgramData\Amazon\EC2-Windows\Launch\Scripts\InitializeInstance.ps1 -Schedule
          & C:\ProgramData\Amazon\EC2-Windows\Launch\Scripts\SysprepInstance.ps1 -NoShutdown
        register: script_result

      - name: Script result
        debug: var=script_result


          