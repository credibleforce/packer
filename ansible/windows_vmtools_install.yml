---
  - hosts: all
    gather_facts: False
    tasks:
      - name: Install vmware tools
        win_shell: |
          New-Item -Path "C:\Updates" -ItemType Directory -ErrorAction SilentlyContinue

          $ProgressPreference = "SilentlyContinue"
          [System.Net.ServicePointManager]::ServerCertificateValidationCallback = {$true}
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          
          # stage vc ++
          (New-Object Net.WebClient).DownloadFile("https://aka.ms/vs/16/release/vc_redist.x86.exe", "C:\Updates\vc_redist.x86.exe")
          (New-Object Net.WebClient).DownloadFile("https://aka.ms/vs/16/release/vc_redist.x64.exe", "C:\Updates\vc_redist.x64.exe")
          
          # upgrade existing vc ++
          $ExitCode = start-process -FilePath "C:\Updates\vc_redist.x86.exe" -ArgumentList "/install /q" -Wait
          Write-Output "Result VC++ 2019 x86: $ExitCode"
          $ExitCode = start-process -FilePath "C:\Updates\vc_redist.x64.exe" -ArgumentList "/install /q" -Wait
          Write-Output "Result VC++ 2019 x64: $ExitCode"

          # force uninstall to ensure dll registration (bug in windows 2012r2 vmwware tools install)
          $ExitCode = start-process -FilePath "C:\Updates\vc_redist.x86.exe" -ArgumentList "/uninstall /q" -Wait
          Write-Output "Result VC++ 2019 x86: $ExitCode"
          $ExitCode = start-process -FilePath "C:\Updates\vc_redist.x64.exe" -ArgumentList "/uninstall /q" -Wait
          Write-Output "Result VC++ 2019 x64: $ExitCode"
          
          # install vmware tools
          $version_url = "https://packages.vmware.com/tools/releases/latest/windows/x64/"
          try{
            $raw_package = (New-Object System.Net.WebClient).DownloadString($version_url)
          }catch{
            Write-Output "Error Finding VMWare Package: $_"
          }

          $raw_package -match "VMware-tools[\w-\d\.]*\.exe"
          $package = $Matches.0
          $url = "https://packages.vmware.com/tools/releases/latest/windows/x64/$package"
          $exe = "C:\Updates\$package"
          Write-Output "***** Downloading VMware Tools: $url to $exe"
          
          try{
            (New-Object System.Net.WebClient).DownloadFile($url, $exe)
          }catch{
            Write-Output "Error Downloading VMWare Package: $_"
          }

          Write-Output "***** Installing VMware Tools: $exe"
          $ExitCode = Start-Process -FilePath "$exe" -ArgumentList '/S /v "/qn REBOOT=R /l*v C:\vmware_tools.txt"' -Wait
          Write-Output "Result: $ExitCode"

          # upgrade vc ++ - post install
          $ExitCode = start-process -FilePath "C:\Updates\vc_redist.x86.exe" -ArgumentList "/install /q" -Wait
          Write-Output "Result VC++ 2019 x86: $ExitCode"
          $ExitCode = start-process -FilePath "C:\Updates\vc_redist.x64.exe" -ArgumentList "/install /q" -Wait
          Write-Output "Result VC++ 2019 x64: $ExitCode"

        register: script_result

      - name: Script result
        debug:
          msg: 
            - "{{ script_result }}"

      # post reboot await winrm
      - name: Wait for system to become reachable over WinRM
        wait_for_connection:
          timeout: 900
          sleep: 60
          delay: 120

      - name: Cleanup
        win_shell: |
          $ProgressPreference = "SilentlyContinue"
          [System.Net.ServicePointManager]::ServerCertificateValidationCallback = {$true}
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

          $version_url = "https://packages.vmware.com/tools/releases/latest/windows/x64/"
          try{
            $raw_package = (New-Object System.Net.WebClient).DownloadString($version_url)
          }catch{
            Write-Output "Error Finding VMWare Package: $_"
          }

          $raw_package -match "VMware-tools[\w-\d\.]*\.exe"
          $package = $Matches.0

          $exe = "C:\Updates\$package"
          Write-Output "***** Deleting $exe"
          Remove-Item $exe

          Remove-Item -LiteralPath "C:\Updates" -Force -Recurse
          Write-Output "$(Get-Date -Format G): Finished installing VMWare Tools."
        register: script_result

      - name: Script result
        debug:
          msg: 
            - "{{ script_result }}"
          